sq() %>%
sum()
pipe_sq_sum(c(3, 6, 8))
# The L2 norm is the square root of the sum of the squared values in the vector
l2 <- function(x) {
sqrt(sum(x^2))
}
View(l2)
foodoo <- function(...) {
c(...)
}
foodoo(a = 1, b = 2, c = 3)
foodoo <- function(a, ...) {
c(...)
}
foodoo(a = 1, b = 2, c = 3)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
setwd("projects/R_learning/dataquest/covid19_project")
library(readr)
covid_df <- read_csv("covid19.csv")
dim(covid_df)
vector_cols <- colnames(covid_df)
vector_cols
head(covid_df)
library(tibble)
glimpse(covid_df)
# Downloading and exploring the data
library(readr)
library(tibble)
covid_df <- read_csv("covid19.csv")
dim(covid_df)
vector_cols <- colnames(covid_df)
vector_cols
head(covid_df)
glimpse(covid_df)
# Downloading and exploring the data
library(readr)
library(tibble)
covid_df <- read_csv("covid19.csv")
dim(covid_df)
vector_cols <- colnames(covid_df)
vector_cols
head(covid_df)
glimpse(covid_df)
View(covid_df)
select(-Province_State)
library(tidyverse)
covid_df_all_states <- covid_df %>%
filter(Province_State == "All States") %>%
select(-Province_State)
View(covid_df_all_states)
covid_df_all_states_daily <- covid_df_all_states %>%
select(Date,
Country_Region,
active,
hospitalizedCurr,
daily_tested,
daily_positive)
View(covid_df_all_states_daily)
covid_df_all_states_daily_sum <- covid_df_all_states_daily %>%
group_by(Country_Region) %>%
summarise(tested = sum(daily_tested),
positive = sum(daily_positive),
active = sum(active),
hospitalized = sum(hospitalizedCurr)) %>%
arrange(desc(tested))
View(covid_df_all_states_daily_sum)
covid_df_all_states_daily_sum
covid_top_10 <- covid_df_all_states_daily_sum %>%
head()
covid_top_10
covid_top_10 <- covid_df_all_states_daily_sum %>%
head(10)
covid_top_10
countries <- covid_top_10$Country_Region
tested_cases <- covid_top_10$tested
positive_cases <- covid_top_10$positive
active_cases <- covid_top_10$active
hospitalized_cases <- covid_top_10$hospitalized
names(tested_cases) <- countries
names(positive_cases) <- countries
names(active_cases) <- countries
names(hospitalized_cases) <- countries
tested_cases
positive_cases / tested_cases
positive_cases / tested_cases %>%
round()
positive_cases / tested_cases %>%
arrange()
positive_cases / tested_cases
positive_tested <- positive_cases / tested_cases
positive_tested
positive_tested["United States"]
positive_tested[c("United Kingdom","United States", "Italy")]
positive_tested_top_3
positive_tested_top_3 <- c("United Kingdom" = 0.108, "United States" = 0.113, "Italy" = 0.061)
positive_tested_top_3
positive_tested_top_3 <- positive_tested[c("United Kingdom","United States", "Italy")]
positive_tested_top_3
positive_tested_top_3 <- positive_tested[c("United Kingdom","United States", "Turkey")]
positive_tested_top_3
united_kingdom <- c(0.11, 1473672, 166909, 0, 0)
united_states <- c(0.10, 17282363, 1877179, 0, 0)
turkey <- c(0.08, 2031192, 163941, 2980960, 0)
covid_mat <- rbind(united_kingdom, united_states, turkey)
covid_mat <- rbind(united_kingdom, united_states, turkey)
covid_mat
View(covid_mat)
covid_mat <- rbind(united_kingdom, united_states, turkey)
colnames(covid_mat) <- c("Ratio", "tested", "positive", "active", "hospitalized")
covid_mat <- rbind(united_kingdom, united_states, turkey)
colnames(covid_mat) <- c("Ratio", "tested", "positive", "active", "hospitalized")
covid_mat
# Downloading and exploring the data
library(readr)
library(tibble)
library(tidyverse)
covid_df <- read_csv("covid19.csv")
dim(covid_df)
vector_cols <- colnames(covid_df)
vector_cols
head(covid_df)
glimpse(covid_df)
covid_df_all_states <- covid_df %>%
filter(Province_State == "All States") %>%
select(-Province_State)
covid_df_all_states_daily <- covid_df_all_states %>%
select(Date,
Country_Region,
active,
hospitalizedCurr,
daily_tested,
daily_positive
)
covid_df_all_states_daily_sum <- covid_df_all_states_daily %>%
group_by(Country_Region) %>%
summarise(tested = sum(daily_tested),
positive = sum(daily_positive),
active = sum(active),
hospitalized = sum(hospitalizedCurr)) %>%
arrange(desc(tested))
covid_df_all_states_daily_sum
covid_top_10 <- covid_df_all_states_daily_sum %>%
head(10)
covid_top_10
countries <- covid_top_10$Country_Region
tested_cases <- covid_top_10$tested
positive_cases <- covid_top_10$positive
active_cases <- covid_top_10$active
hospitalized_cases <- covid_top_10$hospitalized
names(tested_cases) <- countries
names(positive_cases) <- countries
names(active_cases) <- countries
names(hospitalized_cases) <- countries
positive_tested <- positive_cases / tested_cases
positive_tested_top_3 <- positive_tested[c("United Kingdom","United States", "Turkey")]
positive_tested_top_3
united_kingdom <- c(0.11, 1473672, 166909, 0, 0)
united_states <- c(0.10, 17282363, 1877179, 0, 0)
turkey <- c(0.08, 2031192, 163941, 2980960, 0)
covid_mat <- rbind(united_kingdom, united_states, turkey)
colnames(covid_mat) <- c("Ratio", "tested", "positive", "active", "hospitalized")
covid_mat
question <- "Which countries have had the highest number of positive cases against the number of tests?"
answer <- c("Positive tested cases" = positive_tested_top_3)
question <- "Which countries have had the highest number of positive cases against the number of tests?"
answer <- c("Positive tested cases" = positive_tested_top_3)
dataframes <- list(
original = covid_df,
allstates = covid_df_all_states,
daily = covid_df_all_states_daily,
top_10 = covid_top_10
)
matrices <- list(covid_mat)
vectors <- list(vector_cols, countries)
data_structure_list <- list("datasets" = dataframes,
"matrix" = matrices,
"vector" = vectors)
covid_analysis_list <- list(question, answer, data_structure_list)
# solution
covid_analysis_list[[2]]
positive_tested_top_3[[2]]
positive_tested_top_3["United Kingdom"]
type(positive_tested_top_3)
positive_tested_top_3
positive_tested_top_3 %>%
round(2)
positive_tested_top_3 %>%
round(3)
positive_tested_top_3 <- positive_tested_top_3 %>%
round(3)
# solution
covid_analysis_list[[2]]
question <- "Which countries have had the highest number of positive cases against the number of tests?"
answer <- c("Positive tested cases" = positive_tested_top_3)
dataframes <- list(
original = covid_df,
allstates = covid_df_all_states,
daily = covid_df_all_states_daily,
top_10 = covid_top_10
)
matrices <- list(covid_mat)
vectors <- list(vector_cols, countries)
data_structure_list <- list("datasets" = dataframes,
"matrix" = matrices,
"vector" = vectors)
covid_analysis_list <- list(question, answer, data_structure_list)
# solution
covid_analysis_list[[2]]
library(readr)
library(tibble)
library(tidyverse)
covid_df <- read_csv("covid19.csv")
dim(covid_df)
vector_cols <- colnames(covid_df)
vector_cols
head(covid_df)
glimpse(covid_df)
covid_df_all_states <- covid_df %>%
filter(Province_State == "All States") %>%
select(-Province_State)
covid_df_all_states_daily <- covid_df_all_states %>%
select(Date,
Country_Region,
active,
hospitalizedCurr,
daily_tested,
daily_positive
)
covid_df_all_states_daily_sum <- covid_df_all_states_daily %>%
group_by(Country_Region) %>%
summarise(tested = sum(daily_tested),
positive = sum(daily_positive),
active = sum(active),
hospitalized = sum(hospitalizedCurr)) %>%
arrange(desc(tested))
covid_df_all_states_daily_sum
covid_top_10 <- covid_df_all_states_daily_sum %>%
head(10)
covid_top_10
countries <- covid_top_10$Country_Region
tested_cases <- covid_top_10$tested
positive_cases <- covid_top_10$positive
active_cases <- covid_top_10$active
hospitalized_cases <- covid_top_10$hospitalized
names(tested_cases) <- countries
names(positive_cases) <- countries
names(active_cases) <- countries
names(hospitalized_cases) <- countries
positive_tested <- positive_cases / tested_cases
positive_tested_top_3 <- positive_tested[c("United Kingdom","United States", "Turkey")]
positive_tested_top_3 <- positive_tested_top_3 %>%
round(3)
united_kingdom <- c(0.11, 1473672, 166909, 0, 0)
united_states <- c(0.10, 17282363, 1877179, 0, 0)
turkey <- c(0.08, 2031192, 163941, 2980960, 0)
covid_mat <- rbind(united_kingdom, united_states, turkey)
colnames(covid_mat) <- c("Ratio", "tested", "positive", "active", "hospitalized")
covid_mat
question <- "Which countries have had the highest number of positive cases against the number of tests?"
answer <- c("Positive tested cases" = positive_tested_top_3)
dataframes <- list(
original = covid_df,
allstates = covid_df_all_states,
daily = covid_df_all_states_daily,
top_10 = covid_top_10
)
matrices <- list(covid_mat)
vectors <- list(vector_cols, countries)
data_structure_list <- list("datasets" = dataframes,
"matrix" = matrices,
"vector" = vectors)
covid_analysis_list <- list(question, answer, data_structure_list)
# solution
covid_analysis_list[[2]]
library(readr)
library(tibble)
library(tidyverse)
covid_df <- read_csv("covid19.csv")
dim(covid_df)
vector_cols <- colnames(covid_df)
vector_cols
head(covid_df)
glimpse(covid_df)
covid_df_all_states <- covid_df %>%
filter(Province_State == "All States") %>%
select(-Province_State)
covid_df_all_states_daily <- covid_df_all_states %>%
select(Date,
Country_Region,
active,
hospitalizedCurr,
daily_tested,
daily_positive
)
covid_df_all_states_daily_sum <- covid_df_all_states_daily %>%
group_by(Country_Region) %>%
summarise(tested = sum(daily_tested),
positive = sum(daily_positive),
active = sum(active),
hospitalized = sum(hospitalizedCurr)) %>%
arrange(desc(tested))
covid_df_all_states_daily_sum
covid_top_10 <- covid_df_all_states_daily_sum %>%
head(10)
covid_top_10
countries <- covid_top_10$Country_Region
tested_cases <- covid_top_10$tested
positive_cases <- covid_top_10$positive
active_cases <- covid_top_10$active
hospitalized_cases <- covid_top_10$hospitalized
names(tested_cases) <- countries
names(positive_cases) <- countries
names(active_cases) <- countries
names(hospitalized_cases) <- countries
positive_tested <- positive_cases / tested_cases
positive_tested_top_3 <- positive_tested[c("United Kingdom","United States", "Turkey")]
positive_tested_top_3 <- positive_tested_top_3 %>%
round(3)
united_kingdom <- c(0.11, 1473672, 166909, 0, 0)
united_states <- c(0.10, 17282363, 1877179, 0, 0)
turkey <- c(0.08, 2031192, 163941, 2980960, 0)
covid_mat <- rbind(united_kingdom, united_states, turkey)
colnames(covid_mat) <- c("Ratio", "tested", "positive", "active", "hospitalized")
covid_mat
question <- "Which countries have had the highest number of positive cases against the number of tests?"
answer <- c("Positive tested cases" = positive_tested_top_3)
dataframes <- list(
original = covid_df,
allstates = covid_df_all_states,
daily = covid_df_all_states_daily,
top_10 = covid_top_10
)
matrices <- list(covid_mat)
vectors <- list(vector_cols, countries)
data_structure_list <- list("datasets" = dataframes,
"matrix" = matrices,
"vector" = vectors)
covid_analysis_list <- list(question, answer, data_structure_list)
# solution
covid_analysis_list[[2]]
distinct(covid_df, Country_Region)
n_distinct(covid_df, Country_Region)
distinct(covid_df, Country_Region) %>%
count()
distinct(covid_df) %>%
count()
distinct(covid_df$Country_Region) %>%
count()
distinct(covid_df, Country_Region) %>%
count()
covid_df %>%
min(Date) %>%
max(Date)
covid_df %>%
min(Date)
covid_df %>%
min(covid_df$Date)
glimpse(covid_df)
min(covid_df, Date)
distinct(covid_df, Country_Region) %>%
count()
millimeter_measurements <- c(10000, 54900, 94312, 49185, 2100)
meter_measurements = c()
for (measurement in millimeter_measurements) {
meter <- measurement / 1000
meter_measurements <- c(meter_measurements, meter)
}
millimeter_measurements <- c(10000, 54900, 94312, 49185, 2100)
meter_measurements <- integer(length(millimeter_measurements))
indices <- 1:length(millimeter_measurements)
for (i in indices) {
meter <- millimeter_measurements[i] / 1000
meters[i] <- meter
}
meter_measurements[i] <- meter
millimeter_measurements <- c(10000, 54900, 94312, 49185, 2100)
meter_measurements <- integer(length(millimeter_measurements))
indices <- 1:length(millimeter_measurements)
for (i in indices) {
meter <- millimeter_measurements[i] / 1000
meter_measurements[i] <- meter
}
prices <- c(138.19, 82.72, 118.97, 77.55, 62.28, 89.71, 97.36, 91.98, 113.45, 73.93)
is_below_70 <- FALSE
i <- 1
while (!is_below_70) {
buy_price <- prices[i]
is_below_70 <- buy_price < 70
i = i + 1
first_vec <- c(1, 5, 4, 2, 3, 7, 6)
second_vec <- c(9, 2, 1, 8, 3, 4, 5, 6, 10, 7, 12, 11)
third_vec <- c(8, 3, 5, 1, 7, 1, 10)
find_longer_vector <- function(vec_one, vec_two){
if (length(vec_one) > length(vec_two)){
return("First")
} else if (length(vec_one) < length(vec_two)){
return("Second")
} else {
return("Equal Length")
}
}
first_vs_second <- find_longer_vector(first_vec, second_vec)
first_vs_third <- find_longer_vector(first_vec, third_vec)
is_divisible <- function(first, second){
if (first/second == floor(first/second)){
return(TRUE)}
else{return(FALSE)}
}
div_5731_by_11 <- is_divisible(5731, 11)
is_divisible <- function(first, second){
if (first/second == floor(first/second)) {
return(TRUE)
} else {return(FALSE)
}
}
subtract_all <- function(x, ...) {
current_num = x
for (num in list(...)) {
current_num = current_num - num
}
return(current_num)
}
first_subtraction <- subtract_all(10, 3, 2, 1)
second_subtraction <- subtract_all(100, 71, 22)
setwd("~/projects/R_learning/dataquest/NYC_Schools_Perceptions")
library(tidyverse)
combined <- read.csv("combined.csv") # SAT scores
gened_final <- read_tsv("2011_data_files/masterfile11_gened_final.txt") # General survey
d75_final <- read_tsv("2011_data_files/masterfile11_d75_final.txt") # District 75 survey
head(combined)
dim(d75_final)
dim(gened_final)
# general education only high shools
gened_final <- gened_final %>%
filter(schooltype == "High School") %>%
select(dbn:aca_tot_11)
# d75 only cols with aggregated values (_11)
d75_final <- d75_final %>%
select(dbn:aca_tot_11)
surveys <- d75_final %>%
bind_rows(gened_final)
# TCombine the general education and District 75 survey dataframes
colnames(combined)
colnames(surveys)
# Change the key name `dbn` to lowercase for left joining both tibles.
combined <- combined %>%
rename(dbn = DBN)
dim(combined)
# We will retain only observations in the survey dataframe that correspond to observations in combined
colnames(complete)
complete <- combined %>%
left_join(surveys, by = "dbn")
cor_mat <- complete %>%
select(avg_sat_score, saf_p_11:aca_tot_11) %>%
cor(use = "pairwise.complete.obs")
cor_tib <- cor_mat %>%
as_tibble(rownames = "variable")
cor_tib
sat_cors <- cor_tib %>%
select(variable, avg_sat_score) %>%
filter(avg_sat_score > 0.25 | avg_sat_score < -0.25)
# More relevant relationships with avg_sat_score
sat_cors %>%
tail(4) %>%
arrange()
# Scatter plot of most relevant variables
scatter_variables <- complete %>%
pivot_longer(cols = c(saf_t_11, saf_s_11, aca_s_11, saf_tot_11),
names_to = "variables",
values_to = "value") %>%
ggplot(aes(x = value, y = avg_sat_score, color = variables)) +
geom_point() +
facet_wrap(~variables)
scatter_variables
colnames(complete)
complete_longer <- complete %>%
pivot_longer(cols = saf_p_11:aca_tot_11,
names_to = "variables",
values_to = "value")
complete_longer
complete_longer <- complete_longer %>%
mutate(response_type = str_sub(variables, start = 4, end = 6),
metric = str_sub(variables, start = 1, end = 3))
complete_longer <- complete_longer %>%
mutate(metric = ifelse(metric == "aca", "academic expectations",
ifelse(metric == "eng", "engagement",
ifelse(metric == "saf", "safety and respect",
ifelse(metric == "com", "communication", "NA")))),
response_type = ifelse(response_type == "_p_", "parents",
ifelse(response_type == "_t_", "teachers",
ifelse(response_type == "_s_", "students",
ifelse(response_type == "_to", "total", "NA")))))
complete_longer %>%
filter(response_type != "total") %>%
group_by(metric, response_type) %>%
summarise(mean = mean(value, na.rm = TRUE))
complete_longer %>%
filter(response_type != "total") %>%
ggplot(aes(x = metric, y = value, fill = response_type)) +
geom_boxplot() +
facet_grid(~response_type) +
ylim(0, 10) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
complete_longer %>%
filter(response_type != "total") %>%
ggplot(aes(x = metric, y = value, fill = response_type)) +
geom_boxplot() +
facet_grid(~response_type) +
ylim(0, 10) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
